decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()
global @buf_1 = alloc [[i32, 100], 2], zeroinit
fun @merge_sort(@l: i32, @r: i32) { 
%entry:
 @l_2 = alloc i32
 store @l, @l_2
 @r_2 = alloc i32
 store @r, @r_2
 %1 = load @l_2
 %2 = add %1, 1
 %3 = load @r_2
 %0 = ge %2, %3
 br %0, %then0, %end0
%then0:
 ret 0
%0:
 jump %end0
%end0:
 @mid_3 = alloc i32
 %4 = load @l_2
 %5 = load @r_2
 %6 = add %4, %5
 %7 = div %6, 2
 store %7, @mid_3

 %8 = load @l_2
 %9 = load @mid_3
 call @merge_sort(%8, %9)
 %10 = load @mid_3
 %11 = load @r_2
 call @merge_sort(%10, %11)
 @i_3 = alloc i32
 %12 = load @l_2
 store %12, @i_3

 @j_3 = alloc i32
 %13 = load @mid_3
 store %13, @j_3

 @k_3 = alloc i32
 %14 = load @l_2
 store %14, @k_3

 jump %while_entry0
%while_entry0:
@land_res_0 = alloc i32
 %16 = load @i_3
 %17 = load @mid_3
 %15 = lt %16, %17
 br %15, %land_0_0, %end_land_zero0
%land_0_0:
 %19 = load @j_3
 %20 = load @r_2
 %18 = lt %19, %20
 br %18, %land_0_2, %end_land_zero0
%land_0_2:
 %land_res_1_0 = add 0, 1
 store %land_res_1_0, @land_res_0
 jump %land_end_0
%end_land_zero0:
 %land_res_2_0 = add 0, 0
 store %land_res_2_0, @land_res_0
 jump %land_end_0
%land_end_0:
 %ans_land_0 = load@land_res_0
 br %ans_land_0, %while_body0, %while_end0
%while_body0:
 %22 = getelemptr @buf_1, 0
 %23 = load @i_3
 %24 = getelemptr %22, %23
 %25 = load %24
 %26 = getelemptr @buf_1, 0
 %27 = load @j_3
 %28 = getelemptr %26, %27
 %29 = load %28
 %21 = lt %25, %29
 br %21, %then1, %else1
%then1:
 %30 = getelemptr @buf_1, 0
 %31 = load @i_3
 %32 = getelemptr %30, %31
 %33 = load %32
 %34 = getelemptr @buf_1, 1
 %35 = load @k_3
 %36 = getelemptr %34, %35
 store %33, %36

 %37 = load @i_3
 %38 = add %37, 1
 store %38, @i_3


 jump %end1
%else1:
 %39 = getelemptr @buf_1, 0
 %40 = load @j_3
 %41 = getelemptr %39, %40
 %42 = load %41
 %43 = getelemptr @buf_1, 1
 %44 = load @k_3
 %45 = getelemptr %43, %44
 store %42, %45

 %46 = load @j_3
 %47 = add %46, 1
 store %47, @j_3


 jump %end1
%end1:
 %48 = load @k_3
 %49 = add %48, 1
 store %49, @k_3


 jump %while_entry0
%while_end0:
 jump %while_entry1
%while_entry1:
 %51 = load @i_3
 %52 = load @mid_3
 %50 = lt %51, %52
 br %50, %while_body1, %while_end1
%while_body1:
 %53 = getelemptr @buf_1, 0
 %54 = load @i_3
 %55 = getelemptr %53, %54
 %56 = load %55
 %57 = getelemptr @buf_1, 1
 %58 = load @k_3
 %59 = getelemptr %57, %58
 store %56, %59

 %60 = load @i_3
 %61 = add %60, 1
 store %61, @i_3

 %62 = load @k_3
 %63 = add %62, 1
 store %63, @k_3


 jump %while_entry1
%while_end1:
 jump %while_entry2
%while_entry2:
 %65 = load @j_3
 %66 = load @r_2
 %64 = lt %65, %66
 br %64, %while_body2, %while_end2
%while_body2:
 %67 = getelemptr @buf_1, 0
 %68 = load @j_3
 %69 = getelemptr %67, %68
 %70 = load %69
 %71 = getelemptr @buf_1, 1
 %72 = load @k_3
 %73 = getelemptr %71, %72
 store %70, %73

 %74 = load @j_3
 %75 = add %74, 1
 store %75, @j_3

 %76 = load @k_3
 %77 = add %76, 1
 store %77, @k_3


 jump %while_entry2
%while_end2:
 jump %while_entry3
%while_entry3:
 %79 = load @l_2
 %80 = load @r_2
 %78 = lt %79, %80
 br %78, %while_body3, %while_end3
%while_body3:
 %81 = getelemptr @buf_1, 1
 %82 = load @l_2
 %83 = getelemptr %81, %82
 %84 = load %83
 %85 = getelemptr @buf_1, 0
 %86 = load @l_2
 %87 = getelemptr %85, %86
 store %84, %87

 %88 = load @l_2
 %89 = add %88, 1
 store %89, @l_2


 jump %while_entry3
%while_end3:

 ret 
}
fun @main(): i32 { 
%entry:
 @n_3 = alloc i32
 %91 = getelemptr @buf_1, 0
 %92 