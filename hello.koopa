decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()
fun @add(@a: i32, @b: i32): i32 { 
%entry:
 @a_2 = alloc i32
 store @a, @a_2
 @b_2 = alloc i32
 store @b, @b_2
 %0 = load @a_2
 %1 = load @b_2
 %2 = add %0, %1
 ret %2
}
fun @sub(@a: i32, @b: i32): i32 { 
%entry:
 @a_2 = alloc i32
 store @a, @a_2
 @b_2 = alloc i32
 store @b, @b_2
 %3 = load @a_2
 %4 = load @b_2
 %5 = sub %3, %4
 ret %5
}
fun @mul(@a: i32, @b: i32): i32 { 
%entry:
 @a_2 = alloc i32
 store @a, @a_2
 @b_2 = alloc i32
 store @b, @b_2
 %6 = load @a_2
 %7 = load @b_2
 %8 = mul %6, %7
 ret %8
}
fun @div(@a: i32, @b: i32): i32 { 
%entry:
 @a_2 = alloc i32
 store @a, @a_2
 @b_2 = alloc i32
 store @b, @b_2
 %9 = load @a_2
 %10 = load @b_2
 %11 = div %9, %10
 ret %11
}
fun @main(): i32 { 
%entry:
 @x_3 = alloc i32
 %13 = call @sub(1, 2)
 %15 = call @div(4, 5)
 %14 = call @mul(3, %15)
 %12 = call @add(%13, %14)
 store %12, @x_3

 @y_3 = alloc i32
@lor_res_0 = alloc i32
 br 1, %end_lor_one0, %lor_0_0
%lor_0_0:
 br 0, %end_lor_one0, %lor_0_2
%lor_0_2:
 %lor_res_1_0 = add 0, 0
 store %lor_res_1_0, @lor_res_0
 jump %lor_end_0
%end_lor_one0:
 %lor_res_2_0 = add 0, 1
 store %lor_res_2_0, @lor_res_0
 jump %lor_end_0
%lor_end_0:
 %ans_lor_0 = load@lor_res_0
@lor_res_1 = alloc i32
@land_res_0 = alloc i32
 br 0, %land_0_0, %end_land_zero0
%land_0_0:
 %18 = load @x_3
 %17 = call @sub(1, %18)
 br %17, %land_0_2, %end_land_zero0
%land_0_2:
 %land_res_1_0 = add 0, 1
 store %land_res_1_0, @land_res_0
 jump %land_end_0
%end_land_zero0:
 %land_res_2_0 = add 0, 0
 store %land_res_2_0, @land_res_0
 jump %land_end_0
%land_end_0:
 %ans_land_0 = load@land_res_0
 br %ans_land_0, %end_lor_one1, %lor_1_0
%lor_1_0:
@lor_res_2 = alloc i32
 %21 = load @x_3
 br %21, %end_lor_one2, %lor_2_0
%lor_2_0:
 %23 = call @add(1, 2)
 %22 = gt %23, 10
 br %22, %end_lor_one2, %lor_2_2
%lor_2_2:
 %lor_res_1_2 = add 0, 0
 store %lor_res_1_2, @lor_res_2
 jump %lor_end_2
%end_lor_one2:
 %lor_res_2_2 = add 0, 1
 store %lor_res_2_2, @lor_res_2
 jump %lor_end_2
%lor_end_2:
 %ans_lor_2 = load@lor_res_2
 %20 = call @div(%ans_lor_2, 5)
 %19 = call @mul(3, %20)
 br %19, %end_lor_one1, %lor_1_2
%lor_1_2:
 %lor_res_1_1 = add 0, 0
 store %lor_res_1_1, @lor_res_1
 jump %lor_end_1
%end_lor_one1:
 %lor_res_2_1 = add 0, 1
 store %lor_res_2_1, @lor_res_1
 jump %lor_end_1
%lor_end_1:
 %ans_lor_1 = load@lor_res_1
 %16 = call @add(%ans_lor_0, %ans_lor_1)
 store %16, @y_3

 %24 = load @x_3
 %25 = load @y_3
 %26 = add %24, %25
 ret %26
}
