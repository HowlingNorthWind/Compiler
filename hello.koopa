decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()
fun @main(): i32 { 
%entry:
 @arr_3 = alloc [i32, 10]
 %0 = getelemptr @arr_3, 0
 store 0, %0
 %1 = getelemptr @arr_3, 1
 store 0, %1
 %2 = getelemptr @arr_3, 2
 store 0, %2
 %3 = getelemptr @arr_3, 3
 store 0, %3
 %4 = getelemptr @arr_3, 4
 store 0, %4
 %5 = getelemptr @arr_3, 5
 store 0, %5
 %6 = getelemptr @arr_3, 6
 store 0, %6
 %7 = getelemptr @arr_3, 7
 store 0, %7
 %8 = getelemptr @arr_3, 8
 store 0, %8
 %9 = getelemptr @arr_3, 9
 store 0, %9
 @n_3 = alloc i32
 %11 = getelemptr @arr_3, 0
 %10 = call @getarray(%11)
 store %10, @n_3

 @i_3 = alloc i32
 store 0, @i_3

 jump %while_entry0
%while_entry0:
 %13 = load @i_3
 %12 = lt %13, 10
 br %12, %while_body0, %while_end0
%while_body0:
 %15 = load @i_3
 %16 = load @n_3
 %14 = lt %15, %16
 br %14, %then0, %else0
%then0:
 %17 = load @i_3
 %18 = getelemptr @arr_3, %17
 %19 = load %18
 %20 = load @i_3
 %21 = add %19, %20
 %22 = load @i_3
 %23 = getelemptr @arr_3, %22
 store %21, %23


 jump %end0
%else0:
 %24 = load @i_3
 %25 = sub %24, 1
 %26 = getelemptr @arr_3, %25
 %27 = load %26
 %28 = load @i_3
 %29 = add %27, %28
 %30 = load @i_3
 %31 = getelemptr @arr_3, %30
 store %29, %31


 jump %end0
%end0:
 %32 = load @i_3
 %33 = add %32, 1
 store %33, @i_3


 jump %while_entry0
%while_end0:
 %34 = load @n_3
 %35 = getelemptr @arr_3, 0
 call @putarray(%34, %35)
 ret 0
}
